package com.bll.lnkstudy.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bll.lnkstudy.mvp.model.AppBean;
import com.bll.lnkstudy.mvp.model.BaseTypeBean;
import com.bll.lnkstudy.mvp.model.Book;
import com.bll.lnkstudy.mvp.model.CourseBean;
import com.bll.lnkstudy.mvp.model.DateEvent;
import com.bll.lnkstudy.mvp.model.HomeworkContent;
import com.bll.lnkstudy.mvp.model.HomeworkType;
import com.bll.lnkstudy.mvp.model.Note;
import com.bll.lnkstudy.mvp.model.PaintingBean;
import com.bll.lnkstudy.mvp.model.Paper;
import com.bll.lnkstudy.mvp.model.PaperContent;
import com.bll.lnkstudy.mvp.model.RecordBean;
import com.bll.lnkstudy.mvp.model.WallpaperBean;

import com.bll.lnkstudy.greendao.AppBeanDao;
import com.bll.lnkstudy.greendao.BaseTypeBeanDao;
import com.bll.lnkstudy.greendao.BookDao;
import com.bll.lnkstudy.greendao.CourseBeanDao;
import com.bll.lnkstudy.greendao.DateEventDao;
import com.bll.lnkstudy.greendao.HomeworkContentDao;
import com.bll.lnkstudy.greendao.HomeworkTypeDao;
import com.bll.lnkstudy.greendao.NoteDao;
import com.bll.lnkstudy.greendao.PaintingBeanDao;
import com.bll.lnkstudy.greendao.PaperDao;
import com.bll.lnkstudy.greendao.PaperContentDao;
import com.bll.lnkstudy.greendao.RecordBeanDao;
import com.bll.lnkstudy.greendao.WallpaperBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appBeanDaoConfig;
    private final DaoConfig baseTypeBeanDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig courseBeanDaoConfig;
    private final DaoConfig dateEventDaoConfig;
    private final DaoConfig homeworkContentDaoConfig;
    private final DaoConfig homeworkTypeDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig paintingBeanDaoConfig;
    private final DaoConfig paperDaoConfig;
    private final DaoConfig paperContentDaoConfig;
    private final DaoConfig recordBeanDaoConfig;
    private final DaoConfig wallpaperBeanDaoConfig;

    private final AppBeanDao appBeanDao;
    private final BaseTypeBeanDao baseTypeBeanDao;
    private final BookDao bookDao;
    private final CourseBeanDao courseBeanDao;
    private final DateEventDao dateEventDao;
    private final HomeworkContentDao homeworkContentDao;
    private final HomeworkTypeDao homeworkTypeDao;
    private final NoteDao noteDao;
    private final PaintingBeanDao paintingBeanDao;
    private final PaperDao paperDao;
    private final PaperContentDao paperContentDao;
    private final RecordBeanDao recordBeanDao;
    private final WallpaperBeanDao wallpaperBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appBeanDaoConfig = daoConfigMap.get(AppBeanDao.class).clone();
        appBeanDaoConfig.initIdentityScope(type);

        baseTypeBeanDaoConfig = daoConfigMap.get(BaseTypeBeanDao.class).clone();
        baseTypeBeanDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        courseBeanDaoConfig = daoConfigMap.get(CourseBeanDao.class).clone();
        courseBeanDaoConfig.initIdentityScope(type);

        dateEventDaoConfig = daoConfigMap.get(DateEventDao.class).clone();
        dateEventDaoConfig.initIdentityScope(type);

        homeworkContentDaoConfig = daoConfigMap.get(HomeworkContentDao.class).clone();
        homeworkContentDaoConfig.initIdentityScope(type);

        homeworkTypeDaoConfig = daoConfigMap.get(HomeworkTypeDao.class).clone();
        homeworkTypeDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        paintingBeanDaoConfig = daoConfigMap.get(PaintingBeanDao.class).clone();
        paintingBeanDaoConfig.initIdentityScope(type);

        paperDaoConfig = daoConfigMap.get(PaperDao.class).clone();
        paperDaoConfig.initIdentityScope(type);

        paperContentDaoConfig = daoConfigMap.get(PaperContentDao.class).clone();
        paperContentDaoConfig.initIdentityScope(type);

        recordBeanDaoConfig = daoConfigMap.get(RecordBeanDao.class).clone();
        recordBeanDaoConfig.initIdentityScope(type);

        wallpaperBeanDaoConfig = daoConfigMap.get(WallpaperBeanDao.class).clone();
        wallpaperBeanDaoConfig.initIdentityScope(type);

        appBeanDao = new AppBeanDao(appBeanDaoConfig, this);
        baseTypeBeanDao = new BaseTypeBeanDao(baseTypeBeanDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        courseBeanDao = new CourseBeanDao(courseBeanDaoConfig, this);
        dateEventDao = new DateEventDao(dateEventDaoConfig, this);
        homeworkContentDao = new HomeworkContentDao(homeworkContentDaoConfig, this);
        homeworkTypeDao = new HomeworkTypeDao(homeworkTypeDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        paintingBeanDao = new PaintingBeanDao(paintingBeanDaoConfig, this);
        paperDao = new PaperDao(paperDaoConfig, this);
        paperContentDao = new PaperContentDao(paperContentDaoConfig, this);
        recordBeanDao = new RecordBeanDao(recordBeanDaoConfig, this);
        wallpaperBeanDao = new WallpaperBeanDao(wallpaperBeanDaoConfig, this);

        registerDao(AppBean.class, appBeanDao);
        registerDao(BaseTypeBean.class, baseTypeBeanDao);
        registerDao(Book.class, bookDao);
        registerDao(CourseBean.class, courseBeanDao);
        registerDao(DateEvent.class, dateEventDao);
        registerDao(HomeworkContent.class, homeworkContentDao);
        registerDao(HomeworkType.class, homeworkTypeDao);
        registerDao(Note.class, noteDao);
        registerDao(PaintingBean.class, paintingBeanDao);
        registerDao(Paper.class, paperDao);
        registerDao(PaperContent.class, paperContentDao);
        registerDao(RecordBean.class, recordBeanDao);
        registerDao(WallpaperBean.class, wallpaperBeanDao);
    }
    
    public void clear() {
        appBeanDaoConfig.clearIdentityScope();
        baseTypeBeanDaoConfig.clearIdentityScope();
        bookDaoConfig.clearIdentityScope();
        courseBeanDaoConfig.clearIdentityScope();
        dateEventDaoConfig.clearIdentityScope();
        homeworkContentDaoConfig.clearIdentityScope();
        homeworkTypeDaoConfig.clearIdentityScope();
        noteDaoConfig.clearIdentityScope();
        paintingBeanDaoConfig.clearIdentityScope();
        paperDaoConfig.clearIdentityScope();
        paperContentDaoConfig.clearIdentityScope();
        recordBeanDaoConfig.clearIdentityScope();
        wallpaperBeanDaoConfig.clearIdentityScope();
    }

    public AppBeanDao getAppBeanDao() {
        return appBeanDao;
    }

    public BaseTypeBeanDao getBaseTypeBeanDao() {
        return baseTypeBeanDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public CourseBeanDao getCourseBeanDao() {
        return courseBeanDao;
    }

    public DateEventDao getDateEventDao() {
        return dateEventDao;
    }

    public HomeworkContentDao getHomeworkContentDao() {
        return homeworkContentDao;
    }

    public HomeworkTypeDao getHomeworkTypeDao() {
        return homeworkTypeDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public PaintingBeanDao getPaintingBeanDao() {
        return paintingBeanDao;
    }

    public PaperDao getPaperDao() {
        return paperDao;
    }

    public PaperContentDao getPaperContentDao() {
        return paperContentDao;
    }

    public RecordBeanDao getRecordBeanDao() {
        return recordBeanDao;
    }

    public WallpaperBeanDao getWallpaperBeanDao() {
        return wallpaperBeanDao;
    }

}
